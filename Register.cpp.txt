#define _CRT_NONSTDC_NO_DEPRECATE
#define _CRT_SECURE_NO_DEPRECATE 
#define _CRT_SECURE_NO_WARNINGS
#include "Register.h"
#include<string>
#include <iostream>
#include <istream>
#include<fstream>
#include<vector>
#include <ctime>
#include"Events.h"
#include"user.h"
Register::Register() {
	user t;
	cout << "\t \t WELCOME TO EVENT'S SCHEUDLER \t \t  " << endl;
	cout << " \t \t -------------------------------------- \t\t" << endl;
	cout << "If you don't have e-mail please sign up" << endl;
	cout<<endl;
	cout<<endl;
	cout << "***1-Sign up***" << endl;
	cout << "***2-Sign in***" << endl;
	int ch;
	cin >> ch;
	switch (ch)
	{
	case 1:signup(t.id);
		break;
	case 2:signin();
		break;
	default:exit;
	}
}
void Register::set_users_to_file() {
	fstream list;
	list.open("usersinformation.txt", ios::out);
	list.clear();
	for (int i = 0; i < users_list.size(); i++) {
		list << users_list[i].id << '|' << users_list[i].name << '|' << users_list[i].password << endl;
	}
	list.close();
}
void Register::get_users_from_file() {
	string s;
	user temp;
	fstream list;
	users_list.clear();//to not dublicate data in vector
	list.open("usersinformation.txt", ios::in);
	while (!list.eof()) {
		getline(list, s, '|');
		temp.id = atoi(s.c_str());
		getline(list, s, '|');
		temp.name = s;
		getline(list, s);
		temp.password = s;
		users_list.push_back(temp);
	}
	users_list.pop_back();//because there is un decleard user at last of vector 0|0|0
	list.close();
}
void Register::signup(int id)
{
	get_users_from_file();
	user newuser;
	cout << "Enter your Name" << endl;
	cin >> newuser.name;
	cout << "Enter your password" << endl;
	cin >> newuser.password;
	users_list.push_back(newuser);
	set_users_to_file();
	newuser.list(id);
}
void Register::signin() {
	bool founded = false;
	int action;
	int index_of_user;
	system("cls");
	string pass, name;
	cout << "\n enter your name :";
	cin >> name;
	cout << "\n enter your password :";
	cin >> pass;
	get_users_from_file();
	for (int i = 0; i < users_list.size(); i++) {
		if ((name == users_list[i].name) && (pass == users_list[i].password)) {
			index_of_user = i;
			founded = true;
			users_list[i].list(users_list[i].id);
		}
	}
	if (founded == false) {
		cout << "\n !!!wrong password or name to sign in again press 1 to back to main menu press 2  :";
		cin >> action;
		switch (action)
		{
		case 1:signin();
			break;
		default:exit;
			break;
		}
	}
}



